// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	TestRPCRequest
	TestRPCResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto1.ProtoPackageIsVersion1

type TestRPCRequest struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *TestRPCRequest) Reset()                    { *m = TestRPCRequest{} }
func (m *TestRPCRequest) String() string            { return proto1.CompactTextString(m) }
func (*TestRPCRequest) ProtoMessage()               {}
func (*TestRPCRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TestRPCResponse struct {
}

func (m *TestRPCResponse) Reset()                    { *m = TestRPCResponse{} }
func (m *TestRPCResponse) String() string            { return proto1.CompactTextString(m) }
func (*TestRPCResponse) ProtoMessage()               {}
func (*TestRPCResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto1.RegisterType((*TestRPCRequest)(nil), "proto.TestRPCRequest")
	proto1.RegisterType((*TestRPCResponse)(nil), "proto.TestRPCResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Test service

type TestClient interface {
	TestRPC(ctx context.Context, in *TestRPCRequest, opts ...grpc.CallOption) (*TestRPCResponse, error)
}

type testClient struct {
	cc *grpc.ClientConn
}

func NewTestClient(cc *grpc.ClientConn) TestClient {
	return &testClient{cc}
}

func (c *testClient) TestRPC(ctx context.Context, in *TestRPCRequest, opts ...grpc.CallOption) (*TestRPCResponse, error) {
	out := new(TestRPCResponse)
	err := grpc.Invoke(ctx, "/proto.Test/TestRPC", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Test service

type TestServer interface {
	TestRPC(context.Context, *TestRPCRequest) (*TestRPCResponse, error)
}

func RegisterTestServer(s *grpc.Server, srv TestServer) {
	s.RegisterService(&_Test_serviceDesc, srv)
}

func _Test_TestRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(TestRPCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(TestServer).TestRPC(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Test_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Test",
	HandlerType: (*TestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestRPC",
			Handler:    _Test_TestRPC_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x5a, 0x5c, 0x7c, 0x21, 0x40,
	0xc1, 0xa0, 0x00, 0xe7, 0xa0, 0xd4, 0xc2, 0x52, 0x20, 0x4b, 0x48, 0x82, 0x8b, 0x3d, 0x37, 0xb5,
	0xb8, 0x38, 0x31, 0x3d, 0x55, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc6, 0x55, 0x12, 0xe4,
	0xe2, 0x87, 0xab, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x35, 0x72, 0xe2, 0x62, 0x01, 0x09, 0x09,
	0x59, 0x71, 0xb1, 0x43, 0xa5, 0x84, 0x44, 0x21, 0x16, 0xe8, 0xa1, 0x1a, 0x2b, 0x25, 0x86, 0x2e,
	0x0c, 0x31, 0x41, 0x89, 0x21, 0x89, 0x0d, 0x2c, 0x61, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x3f,
	0xc9, 0xb5, 0x54, 0x9e, 0x00, 0x00, 0x00,
}
